---
title: "Monitor da Dengue"
subtitle: S√£o Jos√© do Rio Preto/SP
author: "Marco Rodrigues"
date: today
date-format: "DD [de] MMMM [de] YYYY"
categories: [an√°lise]
image: "image.png"
lang: pt-br
echo: false
warning: false
message: false
title-block-banner: false
css: styles.css
---

<a href="https://www.riopreto.sp.gov.br/campanhas-dengue" target="_blank">
<img src="images/Faca_sua_parte_b215667ebe.jpeg" class="floating-image" alt="Dengue Prevention">
</a>

```{r}
#| warning: false

# Pacotes
library(DBI)
library(tidyverse)
library(dplyr)
library(plotly)
library(DT)
library(sf)
library(leaflet)
library(forecast)
library(trend)

# Carregar vari√°veis de ambiente do arquivo .env
if (file.exists(".env")) {
    readRenviron(".env")
}

# Mapa da Cidade
sjrp <- readRDS(Sys.getenv("MAPA_SJRP_PATH")) |>
    sf::st_as_sf() |>
    sf::st_transform(4326)

# C√≥digo Nacional de Estabelecimentos de Sa√∫de
map <- readRDS(Sys.getenv("CNES_SJRP_PATH")) |>
    sf::st_as_sf() |>
    sf::st_transform(4326)

# Banco de Dados
con <- DBI::dbConnect(
    duckdb::duckdb(),
    dbdir = Sys.getenv("DENGUE_DB_PATH")
)

# Dengue Dados
dengue <- dplyr::tbl(
    con, "dengue_sjrp"
    ) |>
    dplyr::mutate(
        dt_sin_pri = as.Date(dt_sin_pri),
        dt_notific = as.Date(dt_notific),
        dtnot_dtsinpri = dt_notific - dt_sin_pri
    ) |>
    dplyr::collect()

# Configurar locale para portugu√™s brasileiro
invisible(Sys.setlocale("LC_TIME", "pt_BR.UTF-8"))

# Desconectar
DBI::dbDisconnect(con)

```


```{r}
#| output: false

# Configurar locale para portugu√™s brasileiro
Sys.setlocale("LC_TIME", "pt_BR.UTF-8")

# Fun√ß√£o auxiliar para converter meses para portugu√™s
meses_pt_br <- function(data_col) {
    mes_num <- lubridate::month(data_col)
    factor(
        mes_num,
        levels = 1:12,
        labels = c(
            "Janeiro", "Fevereiro", "Mar√ßo", 
            "Abril", "Maio", "Junho",
            "Julho", "Agosto", "Setembro", 
            "Outubro", "Novembro", "Dezembro"
        )
    )
}
```

```{r}
# C√°lculo das m√©dias hist√≥ricas por m√™s com desvio padr√£o (excluindo 2025 para baseline)
medias_historicas <- dengue |>
    dplyr::mutate(
        ano = lubridate::year(dt_notific),
        mes = lubridate::month(dt_notific),
        mes_nome = meses_pt_br(dt_notific)
    ) |>
    dplyr::filter(ano > 2017, ano < 2025) |>  # Hist√≥rico 2018-2024
    dplyr::group_by(mes, mes_nome, ano) |>
    dplyr::summarise(casos_ano = dplyr::n(), .groups = "drop") |>
    dplyr::group_by(mes, mes_nome) |>
    dplyr::summarise(
        casos_total = sum(casos_ano),
        anos_analisados = dplyr::n_distinct(ano),
        media_casos = round(mean(casos_ano), 1),
        desvio_padrao = round(sd(casos_ano), 2),
        .groups = "drop"
    ) |>
    dplyr::arrange(mes)

# Casos de 2025 por m√™s
casos_2025 <- dengue |>
    dplyr::mutate(
        ano = lubridate::year(dt_notific),
        mes = lubridate::month(dt_notific),
        mes_nome = meses_pt_br(dt_notific)
    ) |>
    dplyr::filter(ano == 2025) |>
    dplyr::group_by(mes, mes_nome) |>
    dplyr::summarise(
        casos_2025 = dplyr::n(),
        .groups = "drop"
    )

```

<br>
<p>Com base nos dados disponibilizados pelo pacote [microdatasus](https://github.com/rfsaldanha/microdatasus){target="_blank"}, sobre notifica√ß√µes de dengue no munic√≠pio de S√£o Jos√© do Rio Preto/SP, no per√≠odo de 01 de janeiro de 2018 a `r format(max(dengue$dt_notific[lubridate::year(dengue$dt_notific) == 2025]), "%d de %B de %Y")`, esta an√°lise foca na sazonalidade e no monitoramento da criticidade do fen√¥meno:</p>

```{r}
#| label: tabela-indicador
#| tbl-cap: "Indicadores de alerta por m√™s - Compara√ß√£o 2025 vs. m√©dias hist√≥ricas (2018-2024)"

# Tabela comparativa com indicador de alerta baseado em Z-score
tabela_indicador <- medias_historicas |>
    dplyr::left_join(casos_2025, by = c("mes", "mes_nome")) |>
    dplyr::mutate(
        casos_2025 = ifelse(is.na(casos_2025), 0, casos_2025),
        diferenca = casos_2025 - media_casos,
        percentual_diferenca = round(((casos_2025 / media_casos) - 1) * 100, 1),
        # C√°lculo do Z-score
        z_score = round(ifelse(desvio_padrao > 0, 
                              (casos_2025 - media_casos) / desvio_padrao, 
                              0), 2),
        # Sistema de alertas baseado em Z-score
        status_alerta = dplyr::case_when(
            z_score >= 2 ~ "üö® CR√çTICO",
            z_score >= 1 ~ "‚ö†Ô∏è ALTO", 
            z_score >= 0 ~ "üü° ACIMA DA M√âDIA",
            z_score >= -1 ~ "üü¢ NORMAL",
            TRUE ~ "üîµ BAIXO"
        ),
        # Interpreta√ß√£o estat√≠stica
        significancia = dplyr::case_when(
            abs(z_score) >= 2 ~ "Estatisticamente significativo (p < 0.05)",
            abs(z_score) >= 1.65 ~ "Tend√™ncia significativa (p < 0.10)",
            TRUE ~ "Dentro da varia√ß√£o normal"
        )
    ) |>
    dplyr::select(
        mes_nome, media_casos, desvio_padrao, casos_2025, diferenca, 
        percentual_diferenca, z_score, significancia, status_alerta
    )

# A tabela ser√° exibida no pr√≥ximo chunk com formata√ß√£o interativa
```


# Sazonalidade
<br>
<p>As notifica√ß√µes de dengue apresentam padr√£o sazonal, com maior concentra√ß√£o no Outono e Ver√£o. O pico hist√≥rico de casos ocorre no m√™s de **`r medias_historicas$mes_nome[which.max(medias_historicas$media_casos)]`**:</p>

::: {.panel-tabset}

## Padr√£o Sazonal

```{r}
#| label: fig-sazonalidade
#| fig-cap: "Padr√£o sazonal das notifica√ß√µes de dengue por ano em S√£o Jos√© do Rio Preto/SP"

# An√°lise de sazonalidade - Notifica√ß√µes por m√™s e ano
dados_sazonalidade <- dengue |>
    dplyr::mutate(
        ano = lubridate::year(dt_notific),
        mes = meses_pt_br(dt_notific)
    ) |>
    dplyr::filter(ano > 2017) |>
    dplyr::group_by(ano, mes) |>
    dplyr::summarise(
        notificacoes = dplyr::n(),
        .groups = "drop"
    ) |>
    dplyr::arrange(ano, mes)

# Criar gr√°fico plotly
plot_ly(
    data = dados_sazonalidade,
    x = ~mes,
    y = ~notificacoes,
    color = ~factor(ano),
    type = "scatter",
    mode = "lines+markers",
    line = list(width = 3),
    marker = list(size = 6),
    hovertemplate = "<b>Ano %{fullData.name}</b><br>" %+%
                   "M√™s: %{x}<br>" %+%
                   "Notifica√ß√µes: %{y}<br>" %+%
                   "<extra></extra>"
) |>
layout(
    title = list(
        text = "Sazonalidade da Dengue por Ano<br><sub>S√£o Jos√© do Rio Preto/SP (2018-2025)</sub>",
        font = list(
            size = 16, family = "Arial", color = "#2c3e50"
        )
    ),
    xaxis = list(
        title = "M√™s",
        tickangle = -45,
        font = list(size = 11)
    ),
    yaxis = list(
        title = "N√∫mero de Notifica√ß√µes",
        font = list(size = 11)
    ),
    legend = list(
        title = list(text = "Ano"),
        orientation = "h",
        x = 0.5,
        xanchor = "center",
        y = -0.15
    ),
    hovermode = "x unified",
    plot_bgcolor = "rgba(0,0,0,0)",
    paper_bgcolor = "rgba(0,0,0,0)"
) |>
config(
    displayModeBar = TRUE,
    modeBarButtonsToRemove = c(
        "pan2d", "select2d", "lasso2d", "autoScale2d"
    ),
    displaylogo = FALSE
)

```

## An√°lise Estat√≠stica

```{r}
#| label: analise-tendencia-sazonalidade
#| warning: false

# Fun√ß√£o para an√°lise completa de tend√™ncia e sazonalidade
analisar_tendencia_sazonalidade <- function(dados) {
    
    # 1. Preparar s√©rie temporal mensal
    ts_data <- dados |>
        dplyr::filter(
            lubridate::year(dt_notific) >= 2018
        ) |>
        dplyr::mutate(
            ano_mes = lubridate::floor_date(dt_notific, "month")
        ) |>
        dplyr::count(ano_mes) |>
        tidyr::complete(
            ano_mes = seq(
                min(ano_mes), 
                max(ano_mes), 
                by = "month"
            ), 
            fill = list(n = 0)
        )
    
    # 2. Criar s√©rie temporal
    ts_serie <- ts(
        ts_data$n, 
        start = c(
            lubridate::year(min(ts_data$ano_mes)), 
            lubridate::month(min(ts_data$ano_mes))
        ), 
        frequency = 12
    )
    
    # 3. Decomposi√ß√£o STL (apenas se temos dados suficientes)
    if (length(ts_serie) >= 24) {  # M√≠nimo 2 anos de dados
        decomp <- stl(ts_serie, s.window = "periodic")
    } else {
        decomp <- NULL
    }
    
    # 4. Teste de tend√™ncia de Mann-Kendall
    mk_resultado <- trend::mk.test(ts_serie)
    
    # 5. Inclina√ß√£o de Sen (Sen's slope)
    if (length(ts_serie) >= 3) {
        sens_slope <- trend::sens.slope(ts_serie)
    } else {
        sens_slope <- NULL
    }
    
    # 6. √çndice sazonal
    if (!is.null(decomp)) {
        componente_sazonal <- decomp$time.series[,"seasonal"]
        # Calcular m√©dia sazonal por m√™s
        n_anos <- length(componente_sazonal) / 12
        matriz_sazonal <- matrix(
            componente_sazonal[1:(12 * floor(n_anos))], 
            ncol = 12, byrow = TRUE
        )
        indice_sazonal <- colMeans(matriz_sazonal, na.rm = TRUE)
    } else {
        indice_sazonal <- NULL
    }
    
    return(list(
        serie_temporal = ts_serie,
        dados_ts = ts_data,
        decomposicao = decomp,
        teste_mk = mk_resultado,
        sens_slope = sens_slope,
        indice_sazonal = indice_sazonal
    ))
}

# Aplicar an√°lise
resultado_analise <- analisar_tendencia_sazonalidade(dengue)

```

```{r}
#| label: fig-decomposicao-stl
#| fig-cap: "Decomposi√ß√£o STL da s√©rie temporal de dengue - Tend√™ncia, Sazonalidade e Res√≠duos"

if (!is.null(resultado_analise$decomposicao)) {
    # Converter os √≠ndices temporais da s√©rie ts para datas
    ts_time <- time(resultado_analise$serie_temporal)
    ts_dates <- seq(
        from = as.Date(paste(
            start(resultado_analise$serie_temporal)[1], 
            start(resultado_analise$serie_temporal)[2], 
            "01", sep = "-"
        )),
        by = "month",
        length.out = length(resultado_analise$serie_temporal)
    )
    
    # Extrair componentes da decomposi√ß√£o
    decomp_data <- data.frame(
        Data = ts_dates,
        Observado = as.numeric(resultado_analise$serie_temporal),
        Tendencia = as.numeric(resultado_analise$decomposicao$time.series[,"trend"]),
        Sazonalidade = as.numeric(resultado_analise$decomposicao$time.series[,"seasonal"]),
        Residuos = as.numeric(resultado_analise$decomposicao$time.series[,"remainder"])
    )
    
    # Gr√°fico da decomposi√ß√£o com plotly
    p1 <- plot_ly(
        decomp_data, 
        x = ~Data, 
        y = ~Observado, 
        type = "scatter", 
        mode = "lines",
        name = "Observado", 
        line = list(color = "#2E86AB", width = 2)
    ) |>
        layout(
            title = "S√©rie Observada", 
            yaxis = list(title = "Casos")
        )
    
    p2 <- plot_ly(
        decomp_data, 
        x = ~Data, 
        y = ~Tendencia, 
        type = "scatter", 
        mode = "lines",
        name = "Tend√™ncia", 
        line = list(color = "#A23B72", width = 2)
        ) |>
        layout(title = "Tend√™ncia", yaxis = list(title = "Casos"))
    
    p3 <- plot_ly(
            decomp_data, 
            x = ~Data, 
            y = ~Sazonalidade, 
            type = "scatter", 
            mode = "lines",
            name = "Sazonalidade", 
            line = list(color = "#F18F01", width = 2)
        ) |>
        layout(
            title = "Componente Sazonal", 
            yaxis = list(title = "Efeito")
        )
    
    p4 <- plot_ly(
            decomp_data, 
            x = ~Data, 
            y = ~Residuos, 
            type = "scatter", 
            mode = "lines",
            name = "Res√≠duos", 
            line = list(color = "#C73E1D", width = 1)
        ) |>
        layout(
            title = "Res√≠duos", 
            yaxis = list(title = "Res√≠duos")
        )
    
    # Combinar gr√°ficos
    subplot(
            p1, p2, p3, p4, 
            nrows = 4, 
            shareX = TRUE, 
            titleY = TRUE
        ) |>
        layout(
            title = list(
                text = "Decomposi√ß√£o STL - Dengue S√£o Jos√© do Rio Preto/SP<br><sub>Separa√ß√£o de Tend√™ncia, Sazonalidade e Ru√≠do</sub>",
                font = list(size = 16, color = "#2c3e50")
            ),
            showlegend = FALSE,
            plot_bgcolor = "rgba(0,0,0,0)",
            paper_bgcolor = "rgba(0,0,0,0)"
        ) |>
        config(
            displayModeBar = TRUE, 
            displaylogo = FALSE
        )
    
} else {
    cat("‚ö†Ô∏è Dados insuficientes para decomposi√ß√£o STL (m√≠nimo 24 meses necess√°rios)")
}
```

```{r}
#| label: calculo-indices-estatisticos
#| echo: false
#| output: false

# C√°lculo dos √≠ndices para uso nas explica√ß√µes cursivas
mk_resultado <- resultado_analise$teste_mk
sens_resultado <- resultado_analise$sens_slope

# Interpreta√ß√£o da tend√™ncia
p_valor <- mk_resultado$p.value
tau <- mk_resultado$statistic

# Signific√¢ncia
if (p_valor < 0.001) {
    significancia <- "altamente significativa (p < 0.001)"
    significancia_emoji <- "üî•"
} else if (p_valor < 0.01) {
    significancia <- "muito significativa (p < 0.01)"
    significancia_emoji <- "‚ö°"
} else if (p_valor < 0.05) {
    significancia <- "significativa (p < 0.05)"
    significancia_emoji <- "‚úÖ"
} else {
    significancia <- "n√£o significativa (p ‚â• 0.05)"
    significancia_emoji <- "‚û°Ô∏è"
}

# Dire√ß√£o da tend√™ncia
if (p_valor < 0.05) {
    if (tau > 0) {
        direcao <- "crescente"
        direcao_emoji <- "üìà"
    } else {
        direcao <- "decrescente"
        direcao_emoji <- "üìâ"
    }
} else {
    direcao <- "est√°vel"
    direcao_emoji <- "‚û°Ô∏è"
}

# Magnitude (Sen's slope)
if (!is.null(sens_resultado)) {
    magnitude <- round(sens_resultado$estimates, 3)
    magnitude_abs <- abs(magnitude)
} else {
    magnitude <- 0
    magnitude_abs <- 0
}

# √çndice sazonal
if (!is.null(resultado_analise$indice_sazonal)) {
    indice_sazonal <- resultado_analise$indice_sazonal
    meses_nomes <- c(
        "Janeiro", "Fevereiro", "Mar√ßo", 
        "Abril", "Maio", "Junho",
        "Julho", "Agosto", "Setembro", 
        "Outubro", "Novembro", "Dezembro"
    )
    
    mes_maior_idx <- which.max(indice_sazonal)
    mes_menor_idx <- which.min(indice_sazonal)
    mes_maior <- meses_nomes[mes_maior_idx]
    mes_menor <- meses_nomes[mes_menor_idx]
    
    # Meses de alto e baixo risco
    q75 <- quantile(indice_sazonal, 0.75)
    q25 <- quantile(indice_sazonal, 0.25)
    
    meses_alto_risco <- meses_nomes[indice_sazonal > q75]
    meses_baixo_risco <- meses_nomes[indice_sazonal < q25]
    
    # Formata√ß√£o para texto
    if (length(meses_alto_risco) > 1) {
        meses_alto_texto <- paste(
            paste(
                meses_alto_risco[-length(meses_alto_risco)], 
                collapse = ", "), 
                "e", 
                meses_alto_risco[length(meses_alto_risco)]
        )
    } else {
        meses_alto_texto <- meses_alto_risco[1]
    }
    
    if (length(meses_baixo_risco) > 1) {
        meses_baixo_texto <- paste(
            paste(meses_baixo_risco[-length(meses_baixo_risco)], collapse = ", "), 
            "e", 
            meses_baixo_risco[length(meses_baixo_risco)]
        )
    } else {
        meses_baixo_texto <- meses_baixo_risco[1]
    }
} else {
    mes_maior <- "Indispon√≠vel"
    mes_menor <- "Indispon√≠vel"
    meses_alto_texto <- "Dados insuficientes"
    meses_baixo_texto <- "Dados insuficientes"
}
```

<br>
<p>A an√°lise estat√≠stica da s√©rie temporal de dengue em S√£o Jos√© do Rio Preto revela padr√µes importantes para o planejamento em sa√∫de p√∫blica. Atrav√©s da **decomposi√ß√£o STL**, √© poss√≠vel separar a s√©rie em tr√™s componentes fundamentais: a **tend√™ncia de longo prazo**, que mostra uma tend√™ncia **`r direcao`** `r significancia` (œÑ = `r format(round(tau, 4), nsmall = 4)`, p = `r format(round(p_valor, 4), nsmall = 4)`), o **padr√£o sazonal recorrente**, que identifica sistematicamente os meses de maior e menor risco, e o **componente de ru√≠do**, que representa varia√ß√µes n√£o explicadas pelos padr√µes identificados.</p>

`r if(p_valor < 0.05 && !is.null(sens_resultado)) paste0("<p>A tend√™ncia ", direcao, " detectada indica uma varia√ß√£o m√©dia de **", ifelse(magnitude > 0, "+", ""), format(magnitude, nsmall = 3), " casos por m√™s** ao longo do per√≠odo analisado, segundo o estimador robusto de Sen. Esta informa√ß√£o √© crucial para o dimensionamento de recursos e planejamento de a√ß√µes preventivas a m√©dio e longo prazo.</p>") else "<p>A aus√™ncia de tend√™ncia significativa sugere que as varia√ß√µes observadas na s√©rie temporal est√£o predominantemente associadas aos padr√µes sazonais e a flutua√ß√µes aleat√≥rias, indicando relativa estabilidade na incid√™ncia m√©dia de dengue ao longo dos anos analisados.</p>"`
<br>
```{r}
#| label: fig-indice-sazonal
#| fig-cap: "√çndice de sazonalidade mensal para dengue"

if (!is.null(resultado_analise$indice_sazonal)) {
    # Criar dataframe para o √≠ndice sazonal
    indice_df <- data.frame(
        Mes = factor(1:12, levels = 1:12, labels = c(
            "Jan", "Fev", "Mar", "Abr", "Mai", "Jun",
            "Jul", "Ago", "Set", "Out", "Nov", "Dez"
        )),
        Indice = resultado_analise$indice_sazonal,
        Interpretacao = ifelse(resultado_analise$indice_sazonal > 0, "Acima da m√©dia", "Abaixo da m√©dia"),
        Cor = ifelse(resultado_analise$indice_sazonal > 0, "#E74C3C", "#3498DB")
    )
    
    # Gr√°fico do √≠ndice sazonal
    plot_ly(
        indice_df,
        x = ~Mes,
        y = ~Indice,
        type = "bar",
        marker = list(color = ~Cor),
        hovertemplate = "<b>%{x}</b><br>" %+%
                       "√çndice Sazonal: %{y:.2f}<br>" %+%
                       "%{customdata}<br>" %+%
                       "<extra></extra>",
        customdata = ~Interpretacao
    ) |>
    layout(
        title = list(
            text = "√çndice de Sazonalidade Mensal<br><sub>Efeito sazonal m√©dio por m√™s (desvio da tend√™ncia)</sub>",
            font = list(size = 16, color = "#2c3e50")
        ),
        xaxis = list(
            title = "M√™s",
            tickangle = 0
        ),
        yaxis = list(
            title = "√çndice Sazonal",
            zeroline = TRUE,
            zerolinecolor = "black",
            zerolinewidth = 2
        ),
        plot_bgcolor = "rgba(0,0,0,0)",
        paper_bgcolor = "rgba(0,0,0,0)",
        showlegend = FALSE
    ) |>
    config(displayModeBar = TRUE, displaylogo = FALSE)
    
} else {
    cat("‚ö†Ô∏è Dados insuficientes para c√°lculo do √≠ndice sazonal")
}
```

<p>O **√≠ndice de sazonalidade** quantifica precisamente o efeito sazonal de cada m√™s, revelando que **`r mes_maior`** apresenta o maior efeito sazonal positivo (pico de transmiss√£o), enquanto **`r mes_menor`** registra o menor efeito sazonal (vale de transmiss√£o). Esta an√°lise estat√≠stica identifica `r if(exists("meses_alto_texto") && meses_alto_texto != "Dados insuficientes") paste0("**", meses_alto_texto, "**") else "os meses do primeiro semestre"` como per√≠odo de **maior risco epidemiol√≥gico**, exigindo intensifica√ß√£o das a√ß√µes de vigil√¢ncia e controle vetorial, e `r if(exists("meses_baixo_texto") && meses_baixo_texto != "Dados insuficientes") paste0("**", meses_baixo_texto, "**") else "os meses do segundo semestre"` como janela de oportunidade para **a√ß√µes preventivas estruturais** e prepara√ß√£o para o pr√≥ximo ciclo sazonal.</p>

:::

# Monitoramento Mensal
<br>
<p>A tabela a seguir apresenta a varia√ß√£o percentual das notifica√ß√µes de dengue m√™s a m√™s, estabelecendo um indicador de alerta baseado na compara√ß√£o com as m√©dias hist√≥ricas mensais (per√≠odo 2018-2024):</p>

```{r}
#| label: tbl-monitoramento
#| tbl-cap: "Monitoramento mensal de dengue com indicadores de criticidade - 2025"

# Tabela de Criticidade
tabela_indicador |>
    dplyr::mutate(
        `M√©dia Hist√≥rica` = format(
            media_casos, decimal.mark = ",", 
            big.mark = ".", nsmall = 1
        ),
        `Desvio Padr√£o` = format(
            desvio_padrao, decimal.mark = ",", 
            big.mark = ".", nsmall = 2
        ),
        `Casos 2025` = format(
            casos_2025, decimal.mark = ",", 
            big.mark = "."
            ),
        `Diferen√ßa` = ifelse(
            diferenca >= 0, 
            paste0("+", format(diferenca, decimal.mark = ",", big.mark = ".")), 
            format(diferenca, decimal.mark = ",", big.mark = ".")),
        `Varia√ß√£o (%)` = ifelse(
            percentual_diferenca >= 0,
            paste0("+", format(percentual_diferenca, decimal.mark = ",", nsmall = 1), "%"),
            paste0(format(percentual_diferenca, decimal.mark = ",", nsmall = 1), "%")),
        `Z-score` = format(z_score, decimal.mark = ",", nsmall = 2),
        `Signific√¢ncia` = significancia,
        `Status` = status_alerta
    ) |>
    dplyr::select(
        `M√™s` = mes_nome,
        `M√©dia Hist√≥rica`,
        `Desvio Padr√£o`,
        `Casos 2025`,
        `Z-score`,
        `Signific√¢ncia`,
        `Status`
    ) |>
    DT::datatable(
        options = list(
            pageLength = 12,
            dom = 't',
            columnDefs = list(
                list(
                    className = 'dt-center', 
                    targets = 1:6
                )
            ),
            scrollX = TRUE
        ),
        rownames = FALSE,
        class = "cell-border stripe"
    ) |>
    DT::formatStyle(
        "Status",
        backgroundColor = DT::styleEqual(
            c("üö® CR√çTICO", "‚ö†Ô∏è ALTO", "üü° ACIMA DA M√âDIA", 
            "üü¢ NORMAL", "üîµ BAIXO"),
            c("#ffebee", "#fff3e0", "#fffde7", 
            "#e8f5e8", "#e3f2fd")
        )
    )
```


# Incid√™ncia por Estabelecimento de Sa√∫de
<br>
Em <b>2025</b>, a distribui√ß√£o espacial das notifica√ß√µes de dengue registradas nos estabelecimentos de sa√∫de do Munic√≠pio pode ser analisada atrav√©s do mapa interativo ou da tabela detalhada:
<br>

::: {.panel-tabset}

## üó∫Ô∏è Mapa Interativo

```{r}
#| label: fig-mapa
#| fig-cap: "Distribui√ß√£o das notifica√ß√µes de dengue em S√£o Jos√© do Rio Preto/SP"

# Map - Preparar dados de dengue 2025
dengue_map <- dengue |>
    dplyr::filter(nu_ano == "2025") |>
    dplyr::group_by(id_unidade) |>
    dplyr::summarise(
        n_casos = dplyr::n(),
        .groups = "drop"
    )

# Dados mensais por estabelecimento para 2025
dengue_mensal <- dengue |>
    dplyr::filter(nu_ano == "2025") |>
    dplyr::mutate(
        mes = lubridate::month(dt_notific),
        mes_nome = meses_pt_br(dt_notific)
    ) |>
    dplyr::group_by(id_unidade, mes, mes_nome) |>
    dplyr::summarise(
        casos_mes = dplyr::n(),
        .groups = "drop"
    ) |>
    dplyr::arrange(id_unidade, mes)

# Fun√ß√£o para criar tabela HTML dos dados mensais
criar_tabela_mensal <- function(id_estabelecimento) {
    dados_mes <- dengue_mensal |>
        dplyr::filter(id_unidade == id_estabelecimento)
    
    if (nrow(dados_mes) == 0) {
        return("<br><em>Nenhum dado mensal dispon√≠vel</em>")
    }
    
    tabela_html <- "<br><table style='width: 100%; font-size: 11px; margin-top: 5px; border-collapse: collapse;'>
        <thead>
            <tr style='background-color: #f8f9fa;'>
                <th style='padding: 4px; border: 1px solid #ddd; text-align: left;'>M√™s</th>
                <th style='padding: 4px; border: 1px solid #ddd; text-align: center;'>Casos</th>
            </tr>
        </thead>
        <tbody>"
    
    for (i in 1:nrow(dados_mes)) {
        tabela_html <- paste0(tabela_html,
            "<tr>",
            "<td style='padding: 4px; border: 1px solid #ddd;'>", dados_mes$mes_nome[i], "</td>",
            "<td style='padding: 4px; border: 1px solid #ddd; text-align: center;'>", dados_mes$casos_mes[i], "</td>",
            "</tr>"
        )
    }
    
    tabela_html <- paste0(tabela_html, "</tbody></table>")
    return(tabela_html)
}

# Join Data - apenas estabelecimentos com casos
map_with_cases <- map |>
    dplyr::inner_join(
        dengue_map,
        by = c("code_cnes" = "id_unidade")
    ) |>
    sf::st_intersection(sjrp) |>
    dplyr::rowwise() |>
    dplyr::mutate(
        popup_content = paste0(
            "<b>Unidade:</b> ", no_fantasia, "<br>",
            "<b>Total de casos em 2025:</b> ", n_casos,
            criar_tabela_mensal(code_cnes)
        ),
        label_content = paste0(no_fantasia, ": ", n_casos, " casos")
    ) |>
    dplyr::ungroup() 

map_with_cases |>
    leaflet::leaflet() |>
        leaflet::addProviderTiles(
            "CartoDB.Positron"
        ) |>
        leaflet::addPolygons(
            data = sjrp,
            weight = 1,
            color = "black",
            fillOpacity = 0.1,
            opacity = 0.5,
            label = ~NM_BAIRRO
        ) |>
        leaflet::addCircleMarkers(
            radius = ~n_casos * 0.005,  # M√≠nimo 3px, m√°ximo baseado em casos
            color = "red",
            fillOpacity = 0.7,
            stroke = TRUE,
            weight = 1,
            popup = ~popup_content,
            label = ~label_content,
            labelOptions = leaflet::labelOptions(
                noHide = FALSE,
                direction = "auto",
                style = list(
                    "background-color" = "rgba(255, 255, 255, 0.9)",
                    "border-color" = "rgba(0, 0, 0, 0.2)",
                    "border-radius" = "4px",
                    "border-style" = "solid",
                    "border-width" = "1px",
                    "color" = "#333",
                    "font-family" = "Arial, sans-serif",
                    "font-size" = "12px",
                    "font-weight" = "normal",
                    "padding" = "4px 8px"
                )
            )
        )
```

## üìä Tabela Detalhada

```{r}
#| label: tbl-estabelecimentos
#| tbl-cap: "Ranking de estabelecimentos por n√∫mero de notifica√ß√µes - 2025"

# Criar tabela detalhada por estabelecimento
tabela_estabelecimentos <- map |>
    dplyr::inner_join(
        dengue_map, 
        by = c("code_cnes" = "id_unidade")
    ) |>
    sf::st_drop_geometry() |>
    dplyr::select(
        `Estabelecimento` = no_fantasia,
        `CNES` = code_cnes,
        `Total de Casos` = n_casos
    ) |>
    dplyr::arrange(desc(`Total de Casos`))

# Calcular Z-scores para identificar criticidade estat√≠stica
media_casos <- mean(
    tabela_estabelecimentos$`Total de Casos`
)
desvio_casos <- sd(
    tabela_estabelecimentos$`Total de Casos`
)
z_scores <- (
    tabela_estabelecimentos$`Total de Casos` - media_casos
    ) / desvio_casos

# Definir pontos de corte baseados em Z-score
# Z > 2: Cr√≠tico (top 2.5% - estatisticamente an√¥malo)
# 1 < Z ‚â§ 2: Alto (entre 16% e 2.5%)
# -1 ‚â§ Z ‚â§ 1: Normal (68% central da distribui√ß√£o)  
# Z < -1: Baixo (bottom 16%)
cortes_z <- c(-1, 1, 2)

# Exibir tabela
tabela_estabelecimentos |>
    DT::datatable(
        options = list(
            pageLength = 15,
            dom = 'frtip',
            columnDefs = list(
                list(className = 'dt-center', targets = 1:2),
                list(className = 'dt-left', targets = 0)
            ),
            language = list(
                search = "Buscar:",
                lengthMenu = "Mostrar _MENU_ registros por p√°gina",
                info = "Mostrando _START_ a _END_ de _TOTAL_ estabelecimentos",
                paginate = list(
                    first = "Primeiro",
                    last = "√öltimo", 
                    `next` = "Pr√≥ximo",
                    previous = "Anterior"
                )
            )
        ),
        rownames = FALSE,
        class = "cell-border stripe hover"
    ) |>
    DT::formatStyle(
        "Total de Casos",
        backgroundColor = DT::styleInterval(
            cuts = media_casos + cortes_z * desvio_casos,
            values = c("#f8d7da", "#e8f5e8", "#fff3e0", "#ffebee")
        ),
        fontWeight = "bold"
    )
```

:::

<br>

---

## Refer√™ncias

**SALDANHA, Raphael de Freitas; BASTOS, Ronaldo Rocha; BARCELLOS, Christovam.** Microdatasus: pacote para download e pr√©-processamento de microdados do Departamento de Inform√°tica do SUS (DATASUS). *Cad. Sa√∫de P√∫blica*, Rio de Janeiro, v. 35, n. 9, e00032419, 2019. Dispon√≠vel em: <https://doi.org/10.1590/0102-311x00032419>{target="_blank"}.

---
<br>

<div class="recommendation-box">
<h4>‚ö†Ô∏è Recomenda√ß√£o Importante</h4>
<p><strong>A√ß√µes preventivas devem ser adotadas principalmente nos per√≠odos "fora da sazonalidade".</strong> Para mais informa√ß√µes, acesse os sites da <a href="https://www.riopreto.sp.gov.br/campanhas-dengue" target="_blank">Prefeitura de S√£o Jos√© do Rio Preto</a> e do <a href="https://www.gov.br/saude/pt-br/assuntos/saude-de-a-a-z/d/dengue" target="_blank">Minist√©rio da Sa√∫de</a>.</p>
</div>